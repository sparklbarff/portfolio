/* Enhanced CRT Effects with Realistic Physics Simulation */

/* Base styles and CSS variables */
:root {
  --vh: 1vh;
  --font-ui: "JetBrains Mono", "Hack", "Hack Nerd Font Mono", monospace;
  --bg: #0a0a0a;
  --fg: #e8e3d8;
  --cyan: #00ffc8;
  --vhs-warm: #ffdc80;
  --fade-dur: 9s;
  --period: 20s;
  --ui-bottom-pad: 72px;
  --bg-current: none;
  --sweep-dur: 25s;
}

* {
  -webkit-tap-highlight-color: transparent;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  background: rgba(10, 10, 10, 0.1);
  color: var(--fg);
  font-family: var(--font-ui);
  overflow: hidden;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  width: 100vw;
  height: 100vh;
  position: relative;
}

.bg-container {
  position: fixed;
  inset: 0;
  z-index: -2;
  overflow: hidden;
  background: var(--bg);
}

.bg-image {
  position: absolute;
  inset: 0;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  opacity: 0;
  will-change: opacity, transform;
  transition: opacity var(--fade-dur) ease-in-out;
}

.bg-image.active {
  opacity: 0.85;
}

header {
  min-height: calc(var(--vh) * 100);
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  text-align: center;
  z-index: 10;
  pointer-events: none;
  padding-bottom: calc(env(safe-area-inset-bottom, 0px) + var(--ui-bottom-pad));
  text-shadow: 0 0 1px rgba(0, 0, 0, 0.9), 0 0 8px rgba(0, 0, 0, 0.6);
  gap: clamp(0.5rem, 2vh, 1rem);
}

#glitch-title {
  pointer-events: none;
}

#glitch-title .tg-letter {
  font-size: clamp(2.6rem, 6.8vw, 5.6rem);
  font-weight: 800;
  letter-spacing: 0.02em;
  line-height: 1.05;
  display: inline-block;
  position: relative;
}

nav {
  margin-top: 0;
  margin-bottom: clamp(12px, 5vh, 40px);
  position: relative;
  z-index: 21;
}

#nav-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  gap: clamp(1.2rem, 4.8vw, 2.6rem);
  flex-wrap: wrap;
  justify-content: center;
  pointer-events: auto;
}

#nav-list a {
  color: #e8e3d8;
  text-decoration: none;
  font-size: clamp(1.05rem, 2.6vw, 1.6rem);
  letter-spacing: 0.02em;
  padding: 0.15em 0.32em;
  position: relative;
  transition: color 0.2s ease, text-shadow 0.2s ease;

  text-shadow: 0 0 1px currentColor, 0 0 4px rgba(232, 227, 216, 0.4),
    0 0 8px rgba(232, 227, 216, 0.2);
  filter: brightness(1.05);
}

footer {
  position: fixed;
  left: 0;
  right: 0;
  bottom: env(safe-area-inset-bottom, 0px);
  padding: 0.5em 0.7em;
  z-index: 22;
  pointer-events: none;
  display: block;
  text-align: left;
}

/* Barrel distortion for authentic CRT geometry */
.crt-barrel-distortion {
  position: fixed;
  inset: 0;
  z-index: 37;
  pointer-events: none;
  backdrop-filter: contrast(1.05) brightness(1.02) hue-rotate(0.5deg);
  -webkit-backdrop-filter: contrast(1.05) brightness(1.02) hue-rotate(0.5deg);
  /* SVG filter for barrel distortion */
  filter: url(#crt-barrel-distortion);
}

/* Enhanced scanlines with intensity variation */
.scanlines {
  position: fixed;
  inset: 0;
  z-index: 40;
  pointer-events: none;
  mix-blend-mode: multiply;

  /* More realistic scanline pattern with varying intensity */
  background-image: repeating-linear-gradient(
    rgba(0, 0, 0, 0.42) 0px,
    rgba(0, 0, 0, 0.35) 0.8px,
    rgba(0, 0, 0, 0.15) 1.4px,
    rgba(0, 0, 0, 0.28) 2.2px,
    rgba(0, 0, 0, 0.12) 3px,
    rgba(0, 0, 0, 0.25) 3.8px,
    rgba(0, 0, 0, 0.08) 4.6px
  );

  animation: scanlineFlicker 3.2s steps(3) infinite,
    scanlineIntensityVar 8s ease-in-out infinite;

  /* Curved masking to simulate CRT curvature */
  mask-image: radial-gradient(
      ellipse 102% 98% at center,
      rgba(0, 0, 0, 1) 45%,
      rgba(0, 0, 0, 0.9) 70%,
      rgba(0, 0, 0, 0.7) 85%,
      rgba(0, 0, 0, 0.3) 95%,
      rgba(0, 0, 0, 0) 100%
    ),
    linear-gradient(
      to bottom,
      transparent 0%,
      #000 8%,
      #000 92%,
      transparent 100%
    );
  -webkit-mask-image: radial-gradient(
      ellipse 102% 98% at center,
      rgba(0, 0, 0, 1) 45%,
      rgba(0, 0, 0, 0.9) 70%,
      rgba(0, 0, 0, 0.7) 85%,
      rgba(0, 0, 0, 0.3) 95%,
      rgba(0, 0, 0, 0) 100%
    ),
    linear-gradient(
      to bottom,
      transparent 0%,
      #000 8%,
      #000 92%,
      transparent 100%
    );
  -webkit-mask-composite: source-in;
  mask-composite: intersect;
}

/* Realistic interlaced scanlines */
.scanlines-interlaced {
  position: fixed;
  inset: 0;
  z-index: 39;
  pointer-events: none;
  mix-blend-mode: multiply;

  /* Simulates interlaced CRT with alternating field pattern */
  background-image: repeating-linear-gradient(
    rgba(0, 0, 0, 0.08) 0px,
    rgba(0, 0, 0, 0.08) 1px,
    transparent 2px,
    transparent 3px,
    rgba(0, 0, 0, 0.12) 4px,
    rgba(0, 0, 0, 0.12) 5px,
    transparent 6px,
    transparent 7px
  );

  animation: interlaceShift 0.033s steps(2) infinite; /* 60Hz field rate */
}

/* Enhanced RGB separation with phosphor-accurate colors */
.scanlines-rgb {
  position: fixed;
  inset: 0;
  z-index: 41;
  pointer-events: none;
  mix-blend-mode: screen;
  opacity: 0.18;

  /* Authentic P22 phosphor colors with realistic distribution */
  background-image: repeating-linear-gradient(
      to bottom,
      rgba(255, 69, 0, 0.15) 0 1.5px,
      /* Red phosphor */ transparent 2px
    ),
    repeating-linear-gradient(
      to bottom,
      rgba(0, 255, 100, 0.14) 0.5px 2px,
      /* Green phosphor */ transparent 2.5px
    ),
    repeating-linear-gradient(
      to bottom,
      rgba(70, 130, 255, 0.13) 1px 2.5px,
      /* Blue phosphor */ transparent 3px
    );

  animation: rgbConvergenceError 7s ease-in-out infinite alternate,
    phosphorBrightness 12s ease-in-out infinite;

  /* Radial mask simulating phosphor dot arrangement */
  mask-image: radial-gradient(
    circle at center,
    rgba(0, 0, 0, 1) 55%,
    rgba(0, 0, 0, 0.8) 75%,
    rgba(0, 0, 0, 0.4) 90%,
    rgba(0, 0, 0, 0.2) 100%
  );
  -webkit-mask-image: radial-gradient(
    circle at center,
    rgba(0, 0, 0, 1) 55%,
    rgba(0, 0, 0, 0.8) 75%,
    rgba(0, 0, 0, 0.4) 90%,
    rgba(0, 0, 0, 0.2) 100%
  );
}

/* Enhanced CRT vignette with corner darkening */
.crt-vignette {
  position: fixed;
  inset: 0;
  z-index: 38;
  pointer-events: none;
  background: 
    /* Corner darkening (CRT shadow mask effect) */ radial-gradient(
      ellipse 130% 120% at 15% 15%,
      rgba(0, 0, 0, 0.3),
      transparent 45%
    ),
    radial-gradient(
      ellipse 130% 120% at 85% 15%,
      rgba(0, 0, 0, 0.3),
      transparent 45%
    ),
    radial-gradient(
      ellipse 130% 120% at 15% 85%,
      rgba(0, 0, 0, 0.3),
      transparent 45%
    ),
    radial-gradient(
      ellipse 130% 120% at 85% 85%,
      rgba(0, 0, 0, 0.3),
      transparent 45%
    ),
    /* Main vignette with realistic falloff */
      radial-gradient(
        ellipse 95% 90% at 50% 50%,
        rgba(0, 0, 0, 0) 20%,
        rgba(0, 0, 0, 0.15) 60%,
        rgba(0, 0, 0, 0.35) 85%,
        rgba(0, 0, 0, 0.6) 100%
      ),
    /* Edge brightening (CRT phosphor edge glow) */
      radial-gradient(
        ellipse 88% 82% at 50% 50%,
        rgba(255, 255, 255, 0) 70%,
        rgba(255, 255, 255, 0.02) 85%,
        rgba(255, 255, 255, 0.04) 95%
      );
  mix-blend-mode: multiply;
  opacity: 0.85;
}

/* Enhanced scanline sweep with realistic retrace simulation */
.scanline-sweep {
  position: fixed;
  left: 0;
  right: 0;
  top: -30vh;
  height: 32vh;
  z-index: 45;
  pointer-events: none;

  /* Realistic CRT retrace effect */
  backdrop-filter: contrast(2.8) brightness(1.4) saturate(1.8) hue-rotate(8deg)
    blur(1.5px);
  -webkit-backdrop-filter: contrast(2.8) brightness(1.4) saturate(1.8)
    hue-rotate(8deg) blur(1.5px);

  /* Enhanced noise filter for retrace distortion */
  filter: url(#crt-retrace-noise);

  /* Realistic masking for electron beam shape */
  -webkit-mask-image: 
    /* Horizontal beam intensity profile */ linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 0, 0, 0.3) 12%,
      rgba(0, 0, 0, 1) 25%,
      rgba(0, 0, 0, 1) 75%,
      rgba(0, 0, 0, 0.3) 88%,
      transparent 100%
    ),
    /* Radial falloff for beam focus */
      radial-gradient(
        ellipse 85% 90% at center,
        rgba(0, 0, 0, 1) 50%,
        rgba(0, 0, 0, 0.8) 70%,
        rgba(0, 0, 0, 0.4) 85%,
        rgba(0, 0, 0, 0.2) 95%,
        transparent 100%
      );
  mask-image: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 0, 0, 0.3) 12%,
      rgba(0, 0, 0, 1) 25%,
      rgba(0, 0, 0, 1) 75%,
      rgba(0, 0, 0, 0.3) 88%,
      transparent 100%
    ),
    radial-gradient(
      ellipse 85% 90% at center,
      rgba(0, 0, 0, 1) 50%,
      rgba(0, 0, 0, 0.8) 70%,
      rgba(0, 0, 0, 0.4) 85%,
      rgba(0, 0, 0, 0.2) 95%,
      transparent 100%
    );
  -webkit-mask-composite: source-in;
  mask-composite: intersect;

  mix-blend-mode: screen;
  opacity: 0.22;
  will-change: transform, filter;
  transform: skewY(0.8deg) translateX(-2px);
}

/* Realistic sweep animation with irregular timing */
@keyframes realisticSweepDown {
  0% {
    transform: translateY(-120vh) skewY(0.8deg) translateX(-2px);
    filter: url(#crt-retrace-noise) brightness(1.2);
  }
  15% {
    transform: translateY(-80vh) skewY(-0.3deg) translateX(1px);
    filter: url(#crt-retrace-noise) brightness(1.4);
  }
  35% {
    transform: translateY(-20vh) skewY(1.2deg) translateX(-1px);
    filter: url(#crt-retrace-noise) brightness(1.6);
  }
  50% {
    transform: translateY(30vh) skewY(-0.6deg) translateX(2px);
    filter: url(#crt-retrace-noise) brightness(1.5);
  }
  65% {
    transform: translateY(80vh) skewY(1deg) translateX(-1px);
    filter: url(#crt-retrace-noise) brightness(1.3);
  }
  85% {
    transform: translateY(140vh) skewY(-0.8deg) translateX(3px);
    filter: url(#crt-retrace-noise) brightness(1.1);
  }
  100% {
    transform: translateY(220vh) skewY(0.5deg) translateX(-2px);
    filter: url(#crt-retrace-noise) brightness(1);
  }
}

.scanline-sweep.run {
  animation: realisticSweepDown var(--sweep-dur)
    cubic-bezier(0.15, 0.61, 0.25, 0.98) forwards;
}

/* Phosphor persistence effect for text elements */
.tg-letter {
  position: relative;
  display: inline-block;
  will-change: transform, filter, text-shadow;
}

.tg-letter::after {
  content: attr(data-char);
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s cubic-bezier(0.23, 1, 0.32, 1);
  text-shadow: inherit;
  filter: blur(1px) brightness(0.8);
}

.tg-letter.phosphor-glow::after {
  opacity: 0.6;
  text-shadow: 0 0 8px rgba(0, 255, 100, 0.4), 0 0 16px rgba(0, 255, 100, 0.2);
}

/* Animation keyframes for enhanced realism */
@keyframes scanlineFlicker {
  0% {
    opacity: 1;
  }
  33% {
    opacity: 0.95;
  }
  66% {
    opacity: 1.02;
  }
  100% {
    opacity: 1;
  }
}

@keyframes scanlineIntensityVar {
  0% {
    filter: brightness(1) contrast(1);
  }
  25% {
    filter: brightness(1.05) contrast(1.1);
  }
  50% {
    filter: brightness(0.98) contrast(0.95);
  }
  75% {
    filter: brightness(1.02) contrast(1.05);
  }
  100% {
    filter: brightness(1) contrast(1);
  }
}

@keyframes interlaceShift {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(1px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes rgbConvergenceError {
  0% {
    transform: translateX(0px);
    filter: hue-rotate(0deg);
  }
  25% {
    transform: translateX(0.5px);
    filter: hue-rotate(1deg);
  }
  50% {
    transform: translateX(-0.3px);
    filter: hue-rotate(-0.5deg);
  }
  75% {
    transform: translateX(0.8px);
    filter: hue-rotate(0.8deg);
  }
  100% {
    transform: translateX(0px);
    filter: hue-rotate(0deg);
  }
}

@keyframes phosphorBrightness {
  0% {
    opacity: 0.18;
  }
  30% {
    opacity: 0.22;
  }
  60% {
    opacity: 0.16;
  }
  100% {
    opacity: 0.18;
  }
}

/* Horizontal hold error simulation */
@keyframes horizontalHoldError {
  0% {
    transform: translateX(0px) skewX(0deg);
  }
  10% {
    transform: translateX(-3px) skewX(-0.2deg);
  }
  20% {
    transform: translateX(5px) skewX(0.3deg);
  }
  30% {
    transform: translateX(-2px) skewX(-0.1deg);
  }
  40% {
    transform: translateX(1px) skewX(0.1deg);
  }
  50% {
    transform: translateX(-1px) skewX(-0.05deg);
  }
  100% {
    transform: translateX(0px) skewX(0deg);
  }
}

.horizontal-hold-error {
  animation: horizontalHoldError 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)
    forwards;
}

/* Motion reduction overrides */
@media (prefers-reduced-motion: reduce) {
  .scanlines,
  .scanlines-rgb,
  .scanlines-interlaced,
  .scanline-sweep,
  .crt-vignette,
  .crt-barrel-distortion {
    display: none !important;
  }

  .tg-letter::after {
    display: none !important;
  }
}

[data-motion="paused"] .scanlines,
[data-motion="paused"] .scanlines-rgb,
[data-motion="paused"] .scanlines-interlaced,
[data-motion="paused"] .scanline-sweep,
[data-motion="paused"] .crt-barrel-distortion {
  animation-play-state: paused !important;
  display: none;
}

[data-motion="paused"] .scanline-sweep.run {
  animation: none !important;
}

[data-motion="paused"] .tg-letter::after {
  opacity: 0 !important;
}
